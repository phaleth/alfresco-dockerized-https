# Using version 2 as 3 does not support resource constraint options (cpu_*, mem_* limits) for non swarm mode in Compose
version: "2"

services:
    alfresco:
        build:
          context: ./alfresco
          args:
            ALFRESCO_TAG: ${ALFRESCO_CE_TAG}
            DB: postgres
            API_EXPLORER_TAG: ${API_EXPLORER_TAG}
        mem_limit: 1576m
        depends_on: 
            - postgres  
        environment:
            JAVA_OPTS : '
                -Ddb.driver=org.postgresql.Driver
                -Ddb.username=alfresco
                -Ddb.password=alfresco
                -Ddb.driver=org.postgresql.Driver
                -Ddb.url=jdbc:postgresql://postgres:5432/alfresco  
                -Dsolr.host=solr6
                -Dsolr.port=8983
                -Dsolr.secureComms=none
                -Dsolr.base.url=/solr
                -Dindex.subsystem.name=solr6
                -Dshare.context=share
                -Dshare.host=alfresco.teodorpravicky.com
                -Dshare.port=443
                -Dshare.protocol=https
                -Dalfresco.context=alfresco
                -Dalfresco.host=alfresco.teodorpravicky.com
                -Dalfresco.port=443
                -Dalfresco.protocol=https
                -Daos.baseUrlOverwrite=https://alfresco.teodorpravicky.com/alfresco/aos
                -Dmessaging.broker.url="failover:(nio://activemq:61616)?timeout=3000&jms.useCompression=true"
                -Ddeployment.method=DOCKER_COMPOSE
                -Dlocal.transform.service.enabled=true
                -DlocalTransform.pdfrenderer.url=http://alfresco-pdf-renderer:8090/
                -DlocalTransform.imagemagick.url=http://imagemagick:8090/
                -DlocalTransform.libreoffice.url=http://libreoffice:8090/
                -DlocalTransform.tika.url=http://tika:8090/
                -DlocalTransform.misc.url=http://transform-misc:8090/
                -Dlegacy.transform.service.enabled=true
                -Dalfresco-pdf-renderer.url=http://alfresco-pdf-renderer:8090/
                -Djodconverter.url=http://libreoffice:8090/
                -Dimg.url=http://imagemagick:8090/
                -Dtika.url=http://tika:8090/
                -Dtransform.misc.url=http://transform-misc:8090/
                -Dcsrf.filter.enabled=false
                -Dalfresco.restApi.basicAuthScheme=true
                -Dauthentication.protection.enabled=false
                -XX:+UseG1GC -XX:+UseStringDeduplication
                -Xms1560m -Xmx1560m   
                -Docr.command=/opt/alfresco/bin/ocrmypdf.sh 
                -Docr.output.verbose=true
                -Docr.output.file.prefix.command=
                -Docr.extra.commands="-j1 --rotate-pages -l eng+ces --deskew --clean"
                -Docr.server.os=linux 
            '
        volumes:
            - ./data/alf-repo-data:/usr/local/tomcat/alf_data
            - ./logs/alfresco:/usr/local/tomcat/logs 
            - ./data/ocr/input:/ocr_input
            - ./data/ocr/output:/ocr_output 
        restart: always
        networks:
            alfresco-network:
                ipv4_address: 172.20.0.237
                aliases:
                    - alfresco

    alfresco-pdf-renderer:
        image: alfresco/alfresco-pdf-renderer:${TRANSFORM_ENGINE_TAG}
        mem_limit: 512m
        environment:
            JAVA_OPTS: " -Xms256m -Xmx384m"
        #ports:
        #    - 8090:8090
        restart: always
        networks:
            alfresco-network:
                ipv4_address: 172.20.0.238
                aliases:
                    - pdf-renderer

    imagemagick:
        image: alfresco/alfresco-imagemagick:${TRANSFORM_ENGINE_TAG}
        mem_limit: 512m
        environment:
            JAVA_OPTS: " -Xms256m -Xmx384m"
        #ports:
        #    - 8091:8090
        restart: always
        networks:
            alfresco-network:
                ipv4_address: 172.20.0.239
                aliases:
                    - imagemagick

    libreoffice:
        image: alfresco/alfresco-libreoffice:${TRANSFORM_ENGINE_TAG}
        mem_limit: 512m
        environment:
            JAVA_OPTS: " -Xms256m -Xmx384m"
        #ports:
        #    - 8092:8090
        restart: always
        networks:
            alfresco-network:
                ipv4_address: 172.20.0.240
                aliases:
                    - libreoffice

    tika:
        image: alfresco/alfresco-tika:${TRANSFORM_ENGINE_TAG}
        mem_limit: 512m
        environment:
            JAVA_OPTS: " -Xms256m -Xmx384m"
        #ports:
        #    - 8093:8090
        restart: always
        networks:
            alfresco-network:
                ipv4_address: 172.20.0.241
                aliases:
                    - tika

    transform-misc:
        image: alfresco/alfresco-transform-misc:${TRANSFORM_ENGINE_TAG}
        mem_limit: 512m
        environment:
            JAVA_OPTS: " -Xms256m -Xmx384m"
        #ports:
        #    - 8094:8090
        restart: always
        networks:
            alfresco-network:
                ipv4_address: 172.20.0.242
                aliases:
                    - transform-misc

    share:
        build:
          context: ./share
          args:
            SHARE_TAG: ${SHARE_TAG}
        mem_limit: 592m
        environment:
            REPO_HOST: "alfresco"
            REPO_PORT: "8080"
            JAVA_OPTS: "
                -Xms464m -Xmx464m
                -Dshare.context=share
                -Dshare.host=share
                -Dshare.port=8080
                -Dshare.protocol=http
                -Dalfresco.host=alfresco
                -Dalfresco.port=8080
                -Dalfresco.context=alfresco
                -Dalfresco.protocol=http
                "
        volumes:
            - ./logs/share:/usr/local/tomcat/logs
        restart: always
        networks:
            alfresco-network:
                ipv4_address: 172.20.0.243
                aliases:
                    - share
        
    postgres:
        image: postgres:${POSTGRES_TAG}
        mem_limit: 592m
        environment:
            - POSTGRES_PASSWORD=alfresco
            - POSTGRES_USER=alfresco
            - POSTGRES_DB=alfresco
        command: "
            postgres
              -c max_connections=200
              -c logging_collector=on
              -c log_min_messages=LOG
              -c log_directory=/var/log/postgresql"
        #ports:
        #    - 5432:5432
        volumes:
            - ./data/postgres-data:/var/lib/postgresql/data
            # Set permissions https://github.com/keensoft/docker-alfresco/issues/1
            #- ./logs/postgres:/var/log/postgresql
        restart: always
        networks:
            alfresco-network:
                ipv4_address: 172.20.0.244
                aliases:
                    - mariadb

    solr6:
        build:
          context: ./search
          args:
            SEARCH_TAG: $SEARCH_CE_TAG
            SOLR_HOSTNAME: solr6
            ALFRESCO_HOSTNAME: alfresco 
            ALFRESCO_COMMS: none
            CROSS_LOCALE: "true"
        mem_limit: 1184m
        environment:
            #Solr needs to know how to register itself with Alfresco
            SOLR_ALFRESCO_HOST: "alfresco"
            SOLR_ALFRESCO_PORT: "8080"
            #Alfresco needs to know how to call solr
            SOLR_SOLR_HOST: "solr6"
            SOLR_SOLR_PORT: "8983"
            #Create the default alfresco and archive cores
            SOLR_CREATE_ALFRESCO_DEFAULTS: "alfresco,archive"
            SOLR_JAVA_MEM: "-Xms928m -Xmx928m"
            SOLR_OPTS: "
                -XX:NewSize=336m
                -XX:MaxNewSize=336m
            "
        # Set permissions for user with uid 1000 ('isadm' in host, 'solr' in container)
        #volumes:
        #    - ./data/solr-data:/opt/alfresco-search-services/data
        restart: always
        networks:
            alfresco-network:
                ipv4_address: 172.20.0.245
                aliases:
                    - solr6

    activemq:
        image: alfresco/alfresco-activemq:${ACTIVEMQ_TAG}
        mem_limit: 1g
        ports:
        #    - 8161:8161 # Web Console
        #    - 5672:5672 # AMQP
        #    - 61616:61616 # OpenWire
            - 61613:61613 # STOMP
        restart: always
        networks:
            alfresco-network:
                ipv4_address: 172.20.0.246
                aliases:
                    - activemq

    content-app:
        image: alfresco/alfresco-content-app:${ACA_TAG}
        mem_limit: 256m
        depends_on:
            - alfresco
            - share
        restart: always
        networks:
            alfresco-network:
                ipv4_address: 172.20.0.247
                aliases:
                    - content-app

    # HTTP proxy to provide HTTP Default port access to services
    # SOLR API and SOLR Web Console are protected to avoid unauthenticated access
    proxy:
        image: nginx:mainline-alpine
        mem_limit: 128m
        depends_on:
            - alfresco
            - solr6
            - share
            - content-app
        volumes:
            - ./config/nginx.conf:/etc/nginx/nginx.conf
            - ./config/nginx.htpasswd:/etc/nginx/conf.d/nginx.htpasswd 
            - ./config/cert/localhost.cer:/etc/nginx/localhost.cer
            - ./config/cert/localhost.key:/etc/nginx/localhost.key 
        #ports:
        #    - 80:80
        restart: always
        networks:
            alfresco-network:
                ipv4_address: 172.20.0.248
                aliases:
                    - proxy
    
    ocrmypdf:
        build: ./ocrmypdf
        mem_limit: 512m
        hostname: ocrmypdf
        volumes:
            - ./data/ocr/input:/ocr_input
            - ./data/ocr/output:/ocr_output
        restart: always
        networks:
            alfresco-network:
                ipv4_address: 172.20.0.249
                aliases:
                    - ocrmypdf

networks:
    alfresco-network:
        driver: bridge
        driver_opts:
            com.docker.network.bridge.name: br-alfresco
        ipam:
            driver: default
            config:
                - subnet: 172.20.0.0/24
